<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Copur&#39;s blog</title>
    <link>https://copurxia.github.io/</link>
    <description>Recent content on Copur&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Sun, 12 Apr 2020 12:22:23 +0800</lastBuildDate>
    
	<atom:link href="https://copurxia.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Englisten</title>
      <link>https://copurxia.github.io/englisten/</link>
      <pubDate>Sun, 12 Apr 2020 12:22:23 +0800</pubDate>
      
      <guid>https://copurxia.github.io/englisten/</guid>
      <description>这是什么 ​	英语听力解析系统是英语教学及学习的辅助小工具，作为Snawedu系列的首个完整版（其它都还只是半成品），它具有分析英语听力音频并进行裁剪的效果，使用了语音识别以及自己研究的算法，1.0.0版本中的设置是经历多次试验和筛选留下的成功率极高的一种设置。当然，在音频文件的格式要求上，实际并没有多大要求，导入的对话框所限制的不过是常用的几个格式，因为使用了ffmpeg，所以，理论上ffmpeg支持的格式本解析系统都支持。
如何开发的 ？ 本应用使用electron+python混合开发，nsis进行打包，基于socket通信采用了前后端分离的设计
有什么特点  基于ffmpeg，支持格式多 主题多样，点击右下角按钮一键换装 设置详细  使用要求  本程序要求Windows7 64bit及以上操作系统，mac和Linux等其它平台需要自行编译 计算机资源足够（由于使用了人工智能技术） 6777与6778端口空闲 不能同时运行多个程序 设置中不能包含导致json格式错误的特殊字符  协议 本项目采用SATA协议 -https://github.com/zTrix/sata-license
你不知道这代表什么？简单来说，就是如果你使用了该程序，你需要表示感谢，接下来你便可以随意使用它。 当然，比赛期间不需要star之类的，SATA协议将在本程序公开源代码后生效
快速开始   首先进行安装
  安装完成后进入软件
  进入设置界面进行微调
  点击导入选择音频文件
细节确认中的音频是指可能会被作为段落的音频，该功能在后期将实现自动化
  等待结束
  回到主界面，点击刚刚解析的音频进行导出
  导出完成后会显示导出文件夹
  设置怎么调？ em,这就有点复杂了，需要先牵扯到程序的运算过程了
 首先，几个设置中排在第一位便是第一过滤系统，负责直接筛掉那些连时长也没有达到要求的片段，而该格的单位为s，像默认设置中的6意味着时长小于6s的片段都会被删除，该功能主要用来过滤一些“ding~”，以及一些无意义的杂音。 片段相似度临界为前后片段相似度的筛选临界值，当前后片段相似度超过该临界值时该片段将被舍弃，当然因为语音识别（在用户电脑跑的AI）的能力问题无法把两段一模一样的音频识别完整而使用100%作为临界值，所以，再进行多次试验之后而得出当前版本匹配AI的临界值应为85%，当然，在后续测验中，发现89%的值更适合，然而，既然已经打包完成，而且85%的临界值的解析成功率也已经很高了，所以默认设置就保留了85%的临界值。该格使用百分比，因此请不要使该格的数值超过95%经测试，95%以上能过滤相似片段的能力几乎为0.该功能主要用来过滤相似片段（即重复朗读的片段），当然，如果重复的片段是由不同的人朗读的话，临界值需要调整到83%左右，不过，随着以后AI的强化，估计这种差异可以去除。 接下来是简单介绍静音判断值和静音判断临界的区别，这两个是用来区别麦克风静音和电脑合成的静音，经过分析发现，电脑合成的静音一般振幅在0~15至今，当然也有部分静音是达到18、19的，因此，电脑合成的静音在默认设置中被设定为20，而静音判断值是麦克风静音的临界值，由于麦克风静音时环境杂音的影响，麦克风空置无法达到电脑合成的静音效果，故设该参数。这两个参数的作用便是一切的基础，依靠静音将听力片段进行切割，从而进行后续的步骤。 关键词列表便是该设置页面中最经常需要调整的地方了，不过，经过多次试验，默认设置中的关键词已经基本满足要求，关键词不是越多越好，因此，若不是特别需要请不要修改。修改关键词的方法是直接点击关键词对应标签的x从而删除该关键词，而点击关键词列表格子的空白处就可以新建新的标签，当然，如果是空白的标签便会直接被回收删除。 试听过滤文本可以说是最不需要修改的一个了，毕竟这么多听力听下来，试听的文本基本是问你衬衫的价格，准备的试听过滤文本就不用修改了，当然，由于语音识别还不够智能的原因，所以默认设置中的过滤文本与我们所熟知的衬衫有所不同。 接下来便是最重要的一点，那就是设置的保存问题，该设置全部使用自动保存，即所有设置都是在失去焦点后便会立即保存，保存成功后右上角就会弹出提示保存成功。 皮肤应该也算设置的一种，只要点击更换皮肤便会自动保存。  其它平台编译 由于本系统使用electron和python构建，因此具有跨平台的功能
注意：开发者构建的pydub是修改过的版本，因此，按照该步骤编译的系统需要安装ffmpeg
  安装python和nodejs
  pip install pydub pip install pyinstaller pip install speechrecognition pip install pocketsphinx   如果缺少pocketsphinx的wheel需前往https://www.</description>
    </item>
    
    <item>
      <title>英语听力解析系统开发</title>
      <link>https://copurxia.github.io/post/040501/</link>
      <pubDate>Sun, 05 Apr 2020 12:03:27 +0800</pubDate>
      
      <guid>https://copurxia.github.io/post/040501/</guid>
      <description>一个咕了挺久到现在才初见雏形的程序 思路和开发过程中遇到的坑就等全部完成再写了。</description>
    </item>
    
    <item>
      <title>灰了？</title>
      <link>https://copurxia.github.io/post/040401/</link>
      <pubDate>Sat, 04 Apr 2020 06:28:15 +0800</pubDate>
      
      <guid>https://copurxia.github.io/post/040401/</guid>
      <description>转自xinda233.top
2020年4月4日全国哀悼日，烈士走好</description>
    </item>
    
    <item>
      <title>地理课代表事务申报</title>
      <link>https://copurxia.github.io/dili/</link>
      <pubDate>Thu, 02 Apr 2020 16:22:22 +0800</pubDate>
      
      <guid>https://copurxia.github.io/dili/</guid>
      <description>课代表事务专栏，请在发送消息后于此处评论 格式 真实姓名/发送消息的账号+消息发送的途径（QQ主号/钉钉/QQ专用号）或 发送的消息 不建议因为该网站公开</description>
    </item>
    
    <item>
      <title>关于豆豆下哔哩哔哩视频那些事</title>
      <link>https://copurxia.github.io/post/040101/</link>
      <pubDate>Wed, 01 Apr 2020 18:49:30 +0800</pubDate>
      
      <guid>https://copurxia.github.io/post/040101/</guid>
      <description>最近物理课上课的时候要放哔哩哔哩视频，在线放有经常会卡，所以需要下载下来
方案1：
 唧唧  方案2：
 Bilibili综合扩展+Chrome  方案3：
 火狐+插件已下架  方案4：
 Chrome+离线插件包  方案5：
 访问助手+Chrome+插件包  </description>
    </item>
    
    <item>
      <title>颜色搭配</title>
      <link>https://copurxia.github.io/post/033101/</link>
      <pubDate>Tue, 31 Mar 2020 11:46:58 +0800</pubDate>
      
      <guid>https://copurxia.github.io/post/033101/</guid>
      <description>emm，写了这么久的程序，偶尔也得停下来整理下自己在ui设计上的心得。
首先是经常用的的网站
  Ant Design
​	可以说，正式开始系统地接触ui设计便是在接触antdesign之后吧，虽然之前也有研究过Google的material design和微软的fluent design，可奈何md在电脑上总是很别扭，而微软的的fluent design在没有官方sdk的情况下实现难度又极高，况且我没有相应的编程基础，因此总是在ui设计上相当难受。
​	而遇到了ant design后一些长期在ui设计上的问题便也迎刃而解，antdesign吸引我的无非以下两点
  色彩搭配上的研究
​	这点md倒是也有，但md的色彩是一种固定色板，而非像ant design那样详细的介绍色板是如何来的甚至色彩的生成算法都有所介绍，毕竟，不是只要色板调的好，什么颜色都可以随便上的，而antdesign很相近的解释了色彩的搭配以及每种色彩的使用情景。
  知乎专栏上各种介绍的文章
​	或许因为是本土设计体系的原因，antdesign设计团队给人的感觉似乎跟亲近一先，相较之下，md和fd那种丢下厚厚的文档就跑的有时真心让我这种没什么基础的人头大，而ant design 偏就极其详尽地介绍了各种ui设计的相关知识，这让我受益匪浅，
    掘金
​	掘金可以说是我前端学习路上的引导者，有许多奇怪的问题我便是在掘金学会的，以下是我在掘金看过的几篇比较好的文章
  动图演示23个鲜为人知的VSCode快捷键
  一劳永逸的搞定 flex 布局
  个人总结（css3新特性）
  Node.js文件操作
这些文章有不少其实是挺基础的，然而，对于我这种实力不行的经常查表的萌新就挺有用了。
    一些查表的网站
 W3school MDN 菜鸟教程    </description>
    </item>
    
    <item>
      <title>Edgeless暴力封装</title>
      <link>https://copurxia.github.io/post/033001/</link>
      <pubDate>Mon, 30 Mar 2020 15:02:16 +0800</pubDate>
      
      <guid>https://copurxia.github.io/post/033001/</guid>
      <description>以前的一篇文章 Cno修饰版
 您可以不经过Edgeless团队的同意自由更改发布插件作品，但是请不要忘记您的道德操守 我们不希望看到有违反Edgeless三无精神（无劫持、无广告、无收费）或是违反中华人民共和国相关法律条款的作品出现，也不会承认此类作品与我们有任何关系 继续开发视为您已经同意此条款 如果您希望能上架您的插件包，请加入内测交流QQ群进行提交 此章节是“开发插件包”的补充章节，帮助较为复杂插件包的简化开发，要求您已了解Edgeless插件包开发的基本步骤  以微信PC端为例
 目前准备的有↓
   微信安装包
  VMware workstation
  Edgeless暴力封装专用虚拟机镜像
  Procmon 分析工具
   1.使用VMware导入准备的虚拟机镜像
2.启动虚拟机
3.将微信安装程序拖放至虚拟机
4.运行桌面“Cameyo单文件打包制作v3.1.1530.0汉化增强绿色版”文件夹内的“扫描安装过程并打包.exe”
5.等待扫描结束
6.扫描结束后会出现如下窗口↓
7.此时运行微信安装程序
8.按照正常方式安装
9.点击安装已完成并再次耐心等待扫描结束
10.建立一个Edgeless插件目录
 wechat.wcs是插件的加载代码，符合插件开发文档
 exec =!&amp;ldquo;X:\Program Files\Edgeless\Wechat\setup.cmd&amp;rdquo; link &amp;ldquo;X:\Users\Default\Desktop\Wechat&amp;rdquo;,&amp;ldquo;X:\Program Files (x86)\Tencent\WeChat\WeChat.exe&amp;rdquo; file &amp;ldquo;X:\Program Files\Edgeless\Wechat&amp;rdquo;
   Wechat文件夹内是插件的内容包
  setup.cmd的任务是进行安装过程的模仿
 copy *.dll X:\Windows\SysWOW64*.dll copy *.dll X:\Windows\system32*.dll regedit /s &amp;ldquo;X:\Program Files\Edgeless\Wechat\reg.</description>
    </item>
    
    <item>
      <title>所谓友链</title>
      <link>https://copurxia.github.io/friend/</link>
      <pubDate>Mon, 30 Mar 2020 12:07:17 +0800</pubDate>
      
      <guid>https://copurxia.github.io/friend/</guid>
      <description>友链真心没啥，也就那么几个
 Kerry&amp;rsquo;s blog Edgeless 鑫大的博客 Firpe  </description>
    </item>
    
    <item>
      <title>About</title>
      <link>https://copurxia.github.io/about/</link>
      <pubDate>Mon, 30 Mar 2020 12:06:25 +0800</pubDate>
      
      <guid>https://copurxia.github.io/about/</guid>
      <description>大家都知道的，没啥好讲</description>
    </item>
    
    <item>
      <title>Hello</title>
      <link>https://copurxia.github.io/post/hello/</link>
      <pubDate>Mon, 30 Mar 2020 12:05:57 +0800</pubDate>
      
      <guid>https://copurxia.github.io/post/hello/</guid>
      <description>总算重建成功了</description>
    </item>
    
  </channel>
</rss>